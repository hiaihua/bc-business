-- 删表语句
DROP TABLE IF EXISTS BS_INDUSTRY_RANK;

-- 行业排名
CREATE TABLE BS_INDUSTRY_RANK(
	ID INT NOT NULL,
	YEAR_ INT NOT NULL,
	MONTH_ INT NOT NULL,
	COMPANY VARCHAR(255) NOT NULL,
	S1 NUMERIC(5,2) NOT NULL,
	S2 NUMERIC(5,2) NOT NULL,
	S3 NUMERIC(5,2) NOT NULL,
	S4 NUMERIC(5,2) NOT NULL,
	S5 NUMERIC(5,2) NOT NULL,
	S6 NUMERIC(5,2) NOT NULL,
	S7 NUMERIC(5,2) NOT NULL,
	S8 NUMERIC(5,2) NOT NULL,
	S9 NUMERIC(5,2) NOT NULL,
	TOTAL NUMERIC(5,2) NOT NULL,
	MOCK BOOLEAN NOT NULL,
	RANK INT NOT NULL,
	AUTHOR_ID INT NOT NULL,
	FILE_DATE TIMESTAMP NOT NULL,
	MODIFIER_ID INT,
	MODIFIED_DATE TIMESTAMP,
	CONSTRAINT BSPK_INDUSTRY_RANK PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_INDUSTRY_RANK IS '出租汽车企业服务质量测评表';
COMMENT ON COLUMN BS_INDUSTRY_RANK.ID IS 'ID';
COMMENT ON COLUMN BS_INDUSTRY_RANK.YEAR_ IS '年度';
COMMENT ON COLUMN BS_INDUSTRY_RANK.MONTH_ IS '月份';
COMMENT ON COLUMN BS_INDUSTRY_RANK.COMPANY IS '企业名称';
COMMENT ON COLUMN BS_INDUSTRY_RANK.S1 IS '督查得分';
COMMENT ON COLUMN BS_INDUSTRY_RANK.S2 IS '服务投诉';
COMMENT ON COLUMN BS_INDUSTRY_RANK.S3 IS '交通违法';
COMMENT ON COLUMN BS_INDUSTRY_RANK.S4 IS '营运违章';
COMMENT ON COLUMN BS_INDUSTRY_RANK.S5 IS '车辆查验';
COMMENT ON COLUMN BS_INDUSTRY_RANK.S6 IS '服务违章';
COMMENT ON COLUMN BS_INDUSTRY_RANK.S7 IS '信息化得分';
COMMENT ON COLUMN BS_INDUSTRY_RANK.S8 IS '好人好事';
COMMENT ON COLUMN BS_INDUSTRY_RANK.S9 IS '交通违法率奖惩记分';
COMMENT ON COLUMN BS_INDUSTRY_RANK.TOTAL IS '总分';
COMMENT ON COLUMN BS_INDUSTRY_RANK.MOCK IS '是否为分公司的记录 : 用于分公司的替换式排名';
COMMENT ON COLUMN BS_INDUSTRY_RANK.RANK IS '月度排名';
COMMENT ON COLUMN BS_INDUSTRY_RANK.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_INDUSTRY_RANK.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_INDUSTRY_RANK.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_INDUSTRY_RANK.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BS_INDUSTRY_RANK ADD CONSTRAINT BCFK_INDUSTRY_RANK_AUTHOR FOREIGN KEY (AUTHOR_ID)
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;
ALTER TABLE BS_INDUSTRY_RANK ADD CONSTRAINT BCFK_INDUSTRY_RANK_MODIFIER FOREIGN KEY (MODIFIER_ID)
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;